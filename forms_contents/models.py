from datetime import datetime

from django.db import models

# Create your models here.
from django.urls import reverse

from forms_contents.constant import FORM
from registration.models import Trainer, Personal


# Ön Görüşme Formu
class InterviewInput(models.Model):
    trainer = models.ForeignKey(to=Trainer, verbose_name="Antrenör", on_delete=models.CASCADE, blank=True, null=True)
    personal = models.ForeignKey(to=Personal, verbose_name="Danışan", on_delete=models.CASCADE, blank=True, null=True)
    date = models.DateField(("Date"), default=datetime.now(), blank=True)
    call_date = models.DateField(verbose_name='Telefon Görüşme Tarihi', blank=True, null=True)
    interviewform_test_date = models.DateField(verbose_name='Ön-Görüşme-Test Tarihi', blank=True, null=True)
    interview_conculancy = models.CharField(verbose_name='Danışmanlık Türü', max_length=50, blank=True, null=True)
    exerciseday = models.CharField(verbose_name='Egzersiz Süresi', max_length=50, null=True, blank=True)
    monday = models.CharField(max_length=20, null=True, blank=True)
    tuesday = models.CharField(max_length=20, null=True, blank=True)
    wednesday = models.CharField(max_length=20, null=True, blank=True)
    thursday = models.CharField(max_length=20, null=True, blank=True)
    friday = models.CharField(max_length=20, null=True, blank=True)
    saturday = models.CharField(max_length=20, null=True, blank=True)
    sunday = models.CharField(max_length=20, null=True, blank=True)
    exercisehour = models.CharField(verbose_name='Egzersiz Saat Tercihi', max_length=20, null=True, blank=True)
    interviewform_complaint1 = models.CharField(verbose_name='Muhtemel Şikayetler', max_length=100, null=True,
                                                blank=True)
    force = models.CharField(verbose_name='Kuvvet Gelişimi', max_length=100, null=True, blank=True)
    durability = models.CharField(verbose_name='Dayanıklılık Gelişimi', max_length=100, null=True, blank=True)
    sporty = models.CharField(verbose_name='Sportif Performans Artışı', max_length=100, null=True, blank=True)
    PhysicalAppearance = models.CharField(verbose_name='Fiziksel Görünüm Kazanımı', max_length=100, null=True,
                                          blank=True)
    postural = models.CharField(verbose_name='Postürel Bozulma Önleme/Kontrol', max_length=100, null=True, blank=True)
    diabetes = models.CharField(verbose_name='Diyabet Önleme/Kontrol', max_length=100, null=True, blank=True)
    osteoporosis = models.CharField(verbose_name='Osteoporoz Önleme/Kontrol', max_length=100, null=True, blank=True)
    parkinson = models.CharField(verbose_name='Parkinson Önleme/Kontrol', max_length=100, null=True, blank=True)
    spine = models.CharField(verbose_name='Omurga Problemleri Önlem/Kontrol', max_length=100, null=True, blank=True)
    neck = models.CharField(verbose_name='Boyun Fıtığı Önlem/Kontrol', max_length=100, null=True, blank=True)
    obesity = models.CharField(verbose_name='Obezite Başa Çıkma', max_length=100, null=True, blank=True)
    stress = models.CharField(verbose_name='Stress Yönetimi', max_length=100, null=True, blank=True)
    bodyWeight2 = models.CharField(verbose_name='Vücut Ağırlığı Yönetimi', max_length=100, null=True, blank=True)
    wellness = models.CharField(verbose_name='Zindelik ve Canlılık', max_length=100, null=True, blank=True)
    skolyoz = models.CharField(verbose_name='Skolyoz Önleme/Kontrol', max_length=100, null=True, blank=True)
    hypertension = models.CharField(verbose_name='Hipertansiyon Önleme/Kontrol', max_length=100, null=True, blank=True)
    alzheimer = models.CharField(verbose_name='Alzheimer Önleme/Kontrol', max_length=100, null=True, blank=True)
    cancer = models.CharField(verbose_name='Kanser Önleme/Kontrol', max_length=100, null=True, blank=True)
    kneeInjuries = models.CharField(verbose_name='Diz Yaralanmaları Önlem/Kontrol', max_length=100, null=True,
                                    blank=True)
    herniatedDisc = models.CharField(verbose_name='Bel Fıtığı Önlem/Kontrol', max_length=100, null=True, blank=True)
    inerview_expectation = models.CharField(verbose_name='Beklentiler', max_length=100, null=True, blank=True)
    interview_notes = models.CharField(verbose_name='Beklentiler', max_length=100, null=True, blank=True)

    def get_trainer_interview_delete_url(self):
        return reverse('trainer-interview-delete', kwargs={'id': self.id})

    def get_corporate_interview_delete_url(self):
        return reverse('corporate-interview-delete', kwargs={'id': self.id})

    def get_personal_interview_delete_url(self):
        return reverse('personal-interview-delete', kwargs={'id': self.id})

    class Meta:
        verbose_name_plural = 'Ön Görüşme Formu'


# Medikal Formu
class MedikalInpt(models.Model):
    trainer = models.ForeignKey(to=Trainer, verbose_name="Antrenör", on_delete=models.CASCADE, blank=True, null=True)
    personal = models.ForeignKey(to=Personal, verbose_name="Danışan", on_delete=models.CASCADE, blank=True, null=True)
    date = models.DateField(("Date"), default=datetime.now(), blank=True)
    doctor_name_surname = models.CharField(verbose_name='Adı Soyadı', max_length=50, blank=True, null=True)
    doctor_phone = models.CharField(verbose_name='Telefon', max_length=20, blank=True, null=True)
    doctor_email = models.EmailField(verbose_name='E-Mail', max_length=50, blank=True, null=True)

    def get_trainer_medical_delete_url(self):
        return reverse('trainer-medical-delete', kwargs={'id': self.id})

    def get_corporate_medical_delete_url(self):
        return reverse('corporate-medical-delete', kwargs={'id': self.id})

    def get_personal_medical_delete_url(self):
        return reverse('personal-medical-delete', kwargs={'id': self.id})

    class Meta:
        verbose_name_plural = 'Medikal Formu'


# Teklif ve Sözleşme Formu
class ContractInput(models.Model):
    trainer = models.ForeignKey(to=Trainer, verbose_name="Antrenör", on_delete=models.CASCADE, blank=True, null=True)
    personal = models.ForeignKey(to=Personal, verbose_name="Danışan", on_delete=models.CASCADE, blank=True, null=True)
    date = models.DateField(("Date"), default=datetime.now(), blank=True)
    contract_start_date = models.DateField(verbose_name='Sözleşme Başlama Tarihi', blank=True, null=True)
    contract_finish_date = models.DateField(verbose_name='Sözleşme Bitiş Tarihi', blank=True, null=True)
    contract_conculancy = models.CharField(verbose_name='Danışmanlık Türü', max_length=20, blank=True, null=True)
    exercise_time = models.CharField(verbose_name='Egzersiz Süresi', max_length=100, null=True, blank=True)
    bodyComposition = models.CharField(verbose_name='Vücut Kompozisyonu', max_length=100, null=True, blank=True)
    cardiovascular = models.CharField(verbose_name='Kardiyovasküler Uygunluk', max_length=100, null=True, blank=True)
    metabolic = models.CharField(verbose_name='Metabolik Uygunluk', max_length=100, null=True, blank=True)
    posture = models.CharField(verbose_name='Postür ve Hareket Kalitesi', max_length=100, null=True, blank=True)
    muscleStrength = models.CharField(verbose_name='Kas Kuvveti ve Dayanıklılığı', max_length=100, null=True,
                                      blank=True)
    flexibility = models.CharField(verbose_name='Esneklik ve Mobilite', max_length=100, null=True, blank=True)
    stability = models.CharField(verbose_name='Stabilite ve Denge', max_length=100, null=True, blank=True)
    Report = models.CharField(verbose_name='Sonuçların Yorumlanması ve Raporlaştırılması ', max_length=100, null=True,
                              blank=True)
    manuel = models.CharField(verbose_name="Manuel Kas Testleri", max_length=100, null=True, blank=True)
    atletic = models.CharField(verbose_name="Atletik Performans Testleri", max_length=100, null=True, blank=True)
    lesson = models.CharField(verbose_name='Ders Sayısı', max_length=20, null=True, blank=True)
    measurement = models.CharField(verbose_name='Ölçüm Sayısı', max_length=20, null=True, blank=True)
    price = models.CharField(verbose_name='Fiyatlandıma', max_length=20, null=True, blank=True)
    discount = models.CharField(max_length=50, null=True, blank=True)

    def get_trainer_contract_delete_url(self):
        return reverse('trainer-contract-delete', kwargs={'id': self.id})

    def get_corporate_contract_delete_url(self):
        return reverse('corporate-contract-delete', kwargs={'id': self.id})

    def get_personal_contract_delete_url(self):
        return reverse('personal-contract-delete', kwargs={'id': self.id})

    class Meta:
        verbose_name_plural = 'Teklif ve Sözleşme Formu'


# Gönüllü  Rıza Formu
class VoluntaryInput(models.Model):
    trainer = models.ForeignKey(to=Trainer, verbose_name="Antrenör", on_delete=models.CASCADE, blank=True, null=True)
    personal = models.ForeignKey(to=Personal, verbose_name="Danışan", on_delete=models.CASCADE, blank=True, null=True)
    date = models.DateField(("Date"), default=datetime.now(), blank=True)
    perssonal_name_surname = models.CharField(verbose_name='Danışan Adı Soyadı', max_length=50, null=True, blank=True)
    personal_date = models.DateField(verbose_name='Tarih', null=True, blank=True)
    trainer_name_surname = models.CharField(verbose_name='A Adı Soyadı', max_length=50, null=True, blank=True)
    trainer_date = models.DateField(verbose_name='Tarih', null=True, blank=True)
    witness_name_surname = models.CharField(verbose_name='Tanık Adı Soyadı', max_length=50, null=True, blank=True)
    witness_date = models.DateField(verbose_name='Tanık Tarih', null=True, blank=True)
    witness_phone = models.CharField(verbose_name='Tanık Telefon', max_length=20, null=True, blank=True)

    def get_trainer_voluntary_delete_url(self):
        return reverse('trainer-voluntary-delete', kwargs={'id': self.id})

    def get_corporate_voluntary_delete_url(self):
        return reverse('corporate-voluntary-delete', kwargs={'id': self.id})

    def get_personal_voluntary_delete_url(self):
        return reverse('personal-voluntary-delete', kwargs={'id': self.id})

    class Meta:
        verbose_name_plural = 'Gönüllü  Rıza Formu'


# Aile Öyküsü ve Hastalık Geçmişi
class FamilyInput(models.Model):
    trainer = models.ForeignKey(to=Trainer, verbose_name="Antrenör", on_delete=models.CASCADE, blank=True, null=True)
    personal = models.ForeignKey(to=Personal, verbose_name="Danışan", on_delete=models.CASCADE, blank=True, null=True)
    date = models.DateField(("Date"), default=datetime.now(), blank=True)
    anneAgirlik = models.CharField(verbose_name='Vucut Ağırlığı', max_length=50, blank=True, null=True)
    anneBoy = models.CharField(verbose_name='Boy Uzunluğu', max_length=50, blank=True, null=True)
    anneBki = models.CharField(verbose_name='BKI (kg/boy*boy)', max_length=50, blank=True, null=True)
    babaAgirlik = models.CharField(verbose_name='Vucut Ağırlığı', max_length=50, blank=True, null=True)
    babaBoy = models.CharField(verbose_name='Boy Uzunluğu', max_length=50, blank=True, null=True)
    babaBki = models.CharField(verbose_name='BkI (kg/boy*boy)', max_length=50, blank=True, null=True)
    anneDinlenim = models.CharField(verbose_name='Dinlenim Kalp Atım Hızı (atım)', max_length=50, blank=True,
                                    null=True)
    anneSistolik = models.CharField(verbose_name='Sistolik Kan Basıncı (mmHg)', max_length=50, blank=True, null=True)
    anneKanSekeri = models.CharField(verbose_name='Kan Şekeri (mg/dl)', max_length=50, blank=True, null=True)
    anneKolesterol = models.CharField(verbose_name='Total Kolesterol (mg/dl)', max_length=50, blank=True, null=True)
    anneTrigliserit = models.CharField(verbose_name='Trigliserit (mg/dl)', max_length=50, blank=True, null=True)
    babaDinlenim = models.CharField(verbose_name='Dinlenim Kalp Atım Hızı (atım)', max_length=50, blank=True,
                                    null=True)
    babaSistolik = models.CharField(verbose_name='Sistolik Kan Basıncı (mmHg)', max_length=50, blank=True, null=True)
    babaKanSekeri = models.CharField(verbose_name='Kan Şekeri (mg/dl)', max_length=50, blank=True, null=True)
    babaKolesterol = models.CharField(verbose_name='Total Kolesterol (mg/dl)', max_length=50, blank=True, null=True)
    babaTrigliserit = models.CharField(verbose_name='Trigliserit (mg/dl)', max_length=50, blank=True, null=True)
    kalpKrizi = models.CharField(verbose_name='Kalp krizi', max_length=100, blank=True, null=True)
    kalpAmeliyati = models.CharField(verbose_name='Kalp ameliyatı', max_length=100, blank=True, null=True)
    kalpKateterizasyonu = models.CharField(verbose_name='Kalp kateterizasyonu', max_length=100, blank=True, null=True)
    anjiyoplasti = models.CharField(verbose_name='Koroner anjiyoplasti (ptca)', max_length=100, blank=True, null=True)
    kalpPili = models.CharField(verbose_name='Kalp pili / implante edilebilir kalp', max_length=100, blank=True,
                                null=True)
    defibrilator = models.CharField(verbose_name='Defibrilatör / ritim bozukluğu', max_length=100, blank=True,
                                    null=True)
    kalpKapagi = models.CharField(verbose_name='Kalp kapağı hastalığı', max_length=100, blank=True, null=True)
    kalpYetmezligi = models.CharField(verbose_name='Kalp yetmezliği', max_length=100, blank=True, null=True)
    kalpNakli = models.CharField(verbose_name='Kalp nakli', max_length=100, blank=True, null=True)
    konjenital = models.CharField(verbose_name='Konjenital kalp hastalığı', max_length=100, blank=True, null=True)
    other_status = models.CharField(verbose_name='Diğerler', max_length=150, blank=True, null=True)
    efor = models.CharField(verbose_name='Eforla birlikte göğüs rahatsızlığı yaşama', max_length=100, blank=True,
                            null=True)
    shortnessBreath = models.CharField(verbose_name='Mantıksız nefes darlığı görülmesi', max_length=100, blank=True,
                                       null=True)
    dizziness = models.CharField(verbose_name='Baş dönmesi, bayılma veya göz kararması', max_length=100, blank=True,
                                 null=True)
    ankle = models.CharField(verbose_name='Ayak bileği şişmesi', max_length=100, blank=True, null=True)
    heartBeat = models.CharField(verbose_name='Güçlü veya hızlı bir kalp atış hızı hakkında hoş olmayan bir deneyim',
                                 max_length=100, blank=True, null=True)
    heartMedicine = models.CharField(verbose_name='Kalp ilacı kullanma', max_length=100, blank=True, null=True)
    man = models.CharField(verbose_name='45 yaş erkek', max_length=100, blank=True, null=True)
    woman = models.CharField(verbose_name='55 yaş kadın', max_length=100, blank=True, null=True)
    cigaret = models.CharField(verbose_name='Önceki 6 ay içinde sigara içme veya sigarayı bırakmış olma',
                               max_length=100, blank=True, null=True)
    bloodPressure = models.CharField(verbose_name='Tansiyon 140/90 mm Hg veya daha yukarısı', max_length=100,
                                     blank=True, null=True)
    blood = models.CharField(verbose_name='Kan basıncının bilinmemesi', max_length=100, blank=True, null=True)
    pressureMedication = models.CharField(verbose_name='Tansiyon ilaçı kullanma', max_length=100, blank=True, null=True)
    bloodKolesterol = models.CharField(verbose_name='Kan kolesterol seviyesi 200 mg/dl ve üzerinde', max_length=100,
                                       blank=True, null=True)
    kolesterol = models.CharField(verbose_name='Kolesterol seviyesinin bilinmemesi', max_length=100, blank=True,
                                  null=True)
    fiftyfiveage = models.CharField(
        verbose_name='55 yaşında (baba veya erkek kardeş) önce kalp krizi veya kalp ameliyatı geçirme', max_length=100,
        blank=True, null=True)
    sixtyfiveage = models.CharField(
        verbose_name='65 yaşında (anne veya kız kardeş) önce kalp krizi veya kalp ameliyatı geçirme', max_length=100,
        blank=True, null=True)
    physical = models.CharField(
        verbose_name='Fiziksel olarak aktif değil (haftada en az 50 kez ve günde 500 dk fiziksel aktivite)',
        max_length=100, blank=True, null=True)
    bodyIndex = models.CharField(verbose_name='Vücut kütle indeksi 500 ve üzerinde', max_length=100, blank=True,
                                 null=True)
    prediyabetStatus = models.CharField(verbose_name='Prediyabet durumu', max_length=100, blank=True, null=True)
    prediyabetInformation = models.CharField(verbose_name='Prediyabet bilgisi olmama', max_length=100, blank=True,
                                             null=True)

    def get_trainer_family_delete_url(self):
        return reverse('trainer-family-delete', kwargs={'id': self.id})

    def get_corporate_family_delete_url(self):
        return reverse('corporate-family-delete', kwargs={'id': self.id})

    def get_personal_family_delete_url(self):
        return reverse('personal-family-delete', kwargs={'id': self.id})

    class Meta:
        verbose_name_plural = 'Aile Öyküsü Formu'


# Egzersiz Geçmişi ve Yönelimi"""
class ExercisehistoryInput(models.Model):
    trainer = models.ForeignKey(to=Trainer, verbose_name="Antrenör", on_delete=models.CASCADE, blank=True, null=True)
    personal = models.ForeignKey(to=Personal, verbose_name="Danışan", on_delete=models.CASCADE, blank=True, null=True)
    date = models.DateField(("Date"), default=datetime.now(), blank=True)
    walk = models.CharField(verbose_name='Yürüyüş mesafesi', max_length=50, null=True, blank=True)
    regularexercise = models.CharField(verbose_name='Düzenli egzersiz yapar mısınız?', max_length=50, null=True,
                                       blank=True)
    sport1 = models.CharField(verbose_name='Daha önce spor yaptınız mı?', max_length=50, null=True, blank=True)
    bransh_type = models.CharField(verbose_name='Branş türü', max_length=50, null=True, blank=True)
    bransh_peeriod = models.CharField(verbose_name='Yürüyüş mesafesi', max_length=50, null=True, blank=True)
    weakening = models.CharField(verbose_name="", max_length=100, null=True, blank=True)
    generalHealth = models.CharField(verbose_name="", max_length=100, null=True, blank=True)
    muscularity = models.CharField(verbose_name="", max_length=100, null=True, blank=True)
    gettingFat = models.CharField(verbose_name="", max_length=100, null=True, blank=True)
    functionality = models.CharField(verbose_name="", max_length=100, null=True, blank=True)
    performans = models.CharField(verbose_name="", max_length=100, null=True, blank=True)
    metabolicIllness = models.CharField(verbose_name="", max_length=100, null=True, blank=True)
    musculoskeletal = models.CharField(verbose_name="", max_length=100, null=True, blank=True)
    aesthetic = models.CharField(verbose_name="", max_length=100, null=True, blank=True)
    mentalRelaxation = models.CharField(verbose_name="", max_length=100, null=True, blank=True)
    socializing = models.CharField(verbose_name="", max_length=100, null=True, blank=True)
    egzersizobjectives_other = models.CharField(verbose_name='Diğerlerei...', max_length=100, null=True, blank=True)
    fitnessregistrration = models.CharField(verbose_name='Daha Önce fitness işletmesine kayıt yaptınızmı',
                                            max_length=50,
                                            null=True, blank=True)
    exerciseparticipation = models.CharField(verbose_name='Daha önce Egzersiz yaparken yaralandınız mı?', max_length=50,
                                             blank=True, null=True)
    execiseprofessional = models.CharField(verbose_name='Daha önce bir Egzersiz Profesyoneli ile çalıştınız mı?',
                                           max_length=50, blank=True, null=True)
    safe = models.CharField(verbose_name='Güneş altında Egzersiz Yaparmısınız?',
                            max_length=50, blank=True, null=True)

    def get_trainer_exercisehistory_delete_url(self):
        return reverse('trainer-exercisehistory-delete', kwargs={'id': self.id})

    def get_corporate_exercisehistory_delete_url(self):
        return reverse('corporate-exercisehistory-delete', kwargs={'id': self.id})

    def get_personal_exercisehistory_delete_url(self):
        return reverse('personal-exercisehistory-delete', kwargs={'id': self.id})

    class Meta:
        verbose_name_plural = 'Egzersiz Geçmişi ve Yönelimi'


# 7.PAR-Q Formu
class ParqInput(models.Model):
    trainer = models.ForeignKey(to=Trainer, verbose_name="Antrenör", on_delete=models.CASCADE, blank=True, null=True)
    personal = models.ForeignKey(to=Personal, verbose_name="Danışan", on_delete=models.CASCADE, blank=True, null=True)
    date = models.DateField(("Date"), default=datetime.now(), blank=True)
    parq1 = models.CharField(max_length=50, blank=True, null=True)
    parq2 = models.CharField(max_length=50, blank=True, null=True)
    parq3 = models.CharField(max_length=50, blank=True, null=True)
    parq4 = models.CharField(max_length=50, blank=True, null=True)
    parq5 = models.CharField(max_length=50, blank=True, null=True)
    parq6 = models.CharField(max_length=50, blank=True, null=True)
    parq7 = models.CharField(max_length=50, blank=True, null=True)
    parq8 = models.CharField(max_length=50, blank=True, null=True)

    def get_trainer_parq_delete_url(self):
        return reverse('trainer-parq-delete', kwargs={'id': self.id})

    def get_corporate_parq_delete_url(self):
        return reverse('corporate-parq-delete', kwargs={'id': self.id})

    def get_personal_parq_delete_url(self):
        return reverse('personal-parq-delete', kwargs={'id': self.id})

    class Meta:
        verbose_name_plural = 'PAR-Q Formu'


# Duygu Durumu – Sosyalite – İş Koşulları Formu
class MoodInput(models.Model):
    trainer = models.ForeignKey(to=Trainer, verbose_name="Antrenör", on_delete=models.CASCADE, blank=True, null=True)
    personal = models.ForeignKey(to=Personal, verbose_name="Danışan", on_delete=models.CASCADE, blank=True, null=True)
    date = models.DateField(("Date"), default=datetime.now(), blank=True)
    happy = models.CharField(max_length=100, blank=True, null=True)
    definition = models.CharField(max_length=100, blank=True, null=True)
    motivated_purpose = models.CharField(max_length=100, blank=True, null=True)
    motivated_no = models.CharField(max_length=100, blank=True, null=True)
    adverse_situations = models.CharField(max_length=100, blank=True, null=True)
    success = models.CharField(max_length=100, blank=True, null=True)
    alone = models.CharField(max_length=100, blank=True, null=True)
    family_friends = models.CharField(max_length=100, blank=True, null=True)
    position = models.CharField(max_length=100, blank=True, null=True)
    future_porpose = models.CharField(max_length=100, blank=True, null=True)
    future_no = models.CharField(max_length=100, blank=True, null=True)
    family_meet = models.CharField(max_length=100, blank=True, null=True)
    friends_near = models.CharField(max_length=100, blank=True, null=True)
    holiday = models.CharField(max_length=100, blank=True, null=True)
    activity = models.CharField(max_length=100, blank=True, null=True)
    socialmedia = models.CharField(max_length=100, blank=True, null=True)
    cinema_activity = models.CharField(max_length=100, blank=True, null=True)
    hiking = models.CharField(max_length=100, blank=True, null=True)
    sit_time = models.CharField(max_length=100, blank=True, null=True)
    setting = models.CharField(max_length=100, blank=True, null=True)
    movement = models.CharField(max_length=100, blank=True, null=True)
    noon = models.CharField(max_length=100, blank=True, null=True)

    def get_trainer_mood_delete_url(self):
        return reverse('trainer-mood-delete', kwargs={'id': self.id})

    def get_corporate_mood_delete_url(self):
        return reverse('corporate-mood-delete', kwargs={'id': self.id})

    def get_personal_mood_delete_url(self):
        return reverse('personal-mood-delete', kwargs={'id': self.id})

    class Meta:
        verbose_name_plural = 'Duygu Durumu Formu'


# Uyku Kalitesi – Zindelik – Ağrı Durumu Formu
class SleepqualityInput(models.Model):
    trainer = models.ForeignKey(to=Trainer, verbose_name="Antrenör", on_delete=models.CASCADE, blank=True, null=True)
    personal = models.ForeignKey(to=Personal, verbose_name="Danışan", on_delete=models.CASCADE, blank=True, null=True)
    date = models.DateField(("Date"), default=datetime.now(), blank=True)
    sleep_time = models.CharField(max_length=100, null=True, blank=True)
    phone_time = models.CharField(max_length=100, null=True, blank=True)
    tv_time = models.CharField(max_length=100, null=True, blank=True)
    average_sleep_time = models.CharField(max_length=100, null=True, blank=True)
    sleep_room_dark = models.CharField(max_length=100, null=True, blank=True)
    sleep_room_noice = models.CharField(max_length=100, null=True, blank=True)
    sleep_pozition = models.CharField(max_length=100, null=True, blank=True)
    morning_feel = models.CharField(max_length=100, null=True, blank=True)
    day_energy = models.CharField(max_length=100, null=True, blank=True)
    focus_problem = models.CharField(max_length=100, null=True, blank=True)
    afternoon_energy = models.CharField(max_length=100, null=True, blank=True)
    pain_other = models.CharField(max_length=150, null=True, blank=True)
    pain_no = models.CharField(max_length=100, null=True, blank=True)
    pain_morning_other = models.CharField(max_length=150, null=True, blank=True)
    pain_morning_no = models.CharField(max_length=100, null=True, blank=True)
    pain_day_other = models.CharField(max_length=150, null=True, blank=True)
    pain_day_no = models.CharField(max_length=100, null=True, blank=True)
    pain_month_other = models.CharField(max_length=150, null=True, blank=True)
    pain_month_no = models.CharField(max_length=100, null=True, blank=True)
    pain_head_other = models.CharField(max_length=150, null=True, blank=True)
    pain_head_no = models.CharField(max_length=100, null=True, blank=True)

    def get_trainer_sleepquality_delete_url(self):
        return reverse('trainer-sleepquality-delete', kwargs={'id': self.id})

    def get_corporate_sleepquality_delete_url(self):
        return reverse('corporate-sleepquality-delete', kwargs={'id': self.id})

    def get_personal_sleepquality_delete_url(self):
        return reverse('personal-sleepquality-delete', kwargs={'id': self.id})

    class Meta:
        verbose_name_plural = 'Uyku Kalitesi Formu'


# Beslenme ve Tüketim Alışkanlıkları Formu
class NutritionInput(models.Model):
    trainer = models.ForeignKey(to=Trainer, verbose_name="Antrenör", on_delete=models.CASCADE, blank=True, null=True)
    personal = models.ForeignKey(to=Personal, verbose_name="Danışan", on_delete=models.CASCADE, blank=True, null=True)
    date = models.DateField(("Date"), default=datetime.now(), blank=True)
    breakfast = models.CharField(max_length=100, blank=True, null=True)
    meal = models.CharField(max_length=100, blank=True, null=True)
    snacks = models.CharField(max_length=100, blank=True, null=True)
    drinks = models.CharField(max_length=100, blank=True, null=True)
    juice = models.CharField(max_length=100, blank=True, null=True)
    food = models.CharField(max_length=100, blank=True, null=True)
    protein_choice = models.CharField(max_length=100, blank=True, null=True)
    protein_consumption = models.CharField(max_length=100, blank=True, null=True)
    vegetarian = models.CharField(max_length=100, blank=True, null=True)
    vegetarian_time = models.CharField(max_length=100, blank=True, null=True)
    vegetable_consumption = models.CharField(max_length=100, blank=True, null=True)
    fruid_consumption = models.CharField(max_length=100, blank=True, null=True)
    fruid_vegetables = models.CharField(max_length=100, blank=True, null=True)
    water_consumption = models.CharField(max_length=100, blank=True, null=True)
    milk_consumption = models.CharField(max_length=100, blank=True, null=True)
    yoghurt_consumption = models.CharField(max_length=100, blank=True, null=True)
    cheese_consumption = models.CharField(max_length=100, blank=True, null=True)
    grain_consumption = models.CharField(max_length=100, blank=True, null=True)
    bread_consumption = models.CharField(max_length=100, blank=True, null=True)
    dessert_consumption = models.CharField(max_length=100, blank=True, null=True)
    dinner = models.CharField(max_length=100, blank=True, null=True)
    salt_consumption = models.CharField(max_length=100, blank=True, null=True)
    table_salt = models.CharField(max_length=100, blank=True, null=True)
    alkhol_consumption = models.CharField(max_length=100, blank=True, null=True)
    oil_consumption = models.CharField(max_length=100, blank=True, null=True)
    nuts_consumption = models.CharField(max_length=100, blank=True, null=True)
    nuts_type = models.CharField(max_length=100, blank=True, null=True)
    hot_drink = models.CharField(max_length=100, blank=True, null=True)
    black_tea = models.CharField(max_length=100, blank=True, null=True)
    other_drinks = models.CharField(verbose_name='Diğer İçecekler', max_length=100, blank=True, null=True)
    turkishCoffee1 = models.CharField(max_length=100, blank=True, null=True)
    espresso1 = models.CharField(max_length=100, blank=True, null=True)
    filtrCoffee1 = models.CharField(max_length=100, blank=True, null=True)
    americano1 = models.CharField(max_length=100, blank=True, null=True)
    latte1 = models.CharField(max_length=100, blank=True, null=True)
    macchiato1 = models.CharField(max_length=100, blank=True, null=True)
    mocha1 = models.CharField(max_length=100, blank=True, null=True)
    cappuccino1 = models.CharField(max_length=100, blank=True, null=True)
    flatWhite1 = models.CharField(max_length=100, blank=True, null=True)
    cortado1 = models.CharField(max_length=100, blank=True, null=True)
    frappe1 = models.CharField(max_length=100, blank=True, null=True)
    coffeechoice = models.CharField(max_length=100, blank=True, null=True)
    coffee_other = models.CharField(verbose_name='Diğer Tüketimler', max_length=150, blank=True, null=True)
    coffeechoice_other = models.CharField(max_length=100, blank=True, null=True)
    ketojenik = models.CharField(max_length=100, blank=True, null=True)
    dukan = models.CharField(max_length=100, blank=True, null=True)
    intermittent = models.CharField(max_length=100, blank=True, null=True)
    akdeniz = models.CharField(max_length=100, blank=True, null=True)
    paleo = models.CharField(max_length=100, blank=True, null=True)
    atkins = models.CharField(max_length=100, blank=True, null=True)
    zone = models.CharField(max_length=100, blank=True, null=True)
    dash = models.CharField(max_length=100, blank=True, null=True)
    flexitarian = models.CharField(max_length=100, blank=True, null=True)
    whole500 = models.CharField(max_length=100, blank=True, null=True)
    no = models.CharField(max_length=100, blank=True, null=True)
    health1 = models.CharField(max_length=100, blank=True, null=True)
    weaken = models.CharField(max_length=100, blank=True, null=True)
    diseases = models.CharField(max_length=100, blank=True, null=True)
    trend = models.CharField(max_length=100, blank=True, null=True)
    try_request = models.CharField(max_length=100, blank=True, null=True)
    doctor = models.CharField(max_length=100, blank=True, null=True)
    nutritionist = models.CharField(max_length=100, blank=True, null=True)
    sport2 = models.CharField(max_length=100, blank=True, null=True)
    advice = models.CharField(max_length=100, blank=True, null=True)
    dietbefore_other = models.CharField(max_length=150, null=True, blank=True)
    diet_other = models.CharField(max_length=150, null=True, blank=True)
    celebrityadvice = models.CharField(max_length=100, blank=True, null=True)
    long_diet = models.CharField(max_length=100, null=True, blank=True)
    longdiet_other = models.CharField(max_length=150, null=True, blank=True)
    d = models.CharField(max_length=100, blank=True, null=True)
    c = models.CharField(max_length=100, blank=True, null=True)
    b = models.CharField(max_length=100, blank=True, null=True)
    multiVitamin = models.CharField(max_length=100, blank=True, null=True)
    immunity = models.CharField(max_length=100, blank=True, null=True)
    iron = models.CharField(max_length=100, blank=True, null=True)
    zinc = models.CharField(max_length=100, blank=True, null=True)
    calcium = models.CharField(max_length=100, blank=True, null=True)
    kollajen = models.CharField(max_length=100, blank=True, null=True)
    glucosamin = models.CharField(max_length=100, blank=True, null=True)
    aminoasit = models.CharField(max_length=100, blank=True, null=True)
    l = models.CharField(max_length=100, blank=True, null=True)
    cla = models.CharField(max_length=100, blank=True, null=True)
    chromium = models.CharField(max_length=100, blank=True, null=True)
    omega = models.CharField(max_length=100, blank=True, null=True)
    q = models.CharField(max_length=100, blank=True, null=True)
    protein_powder = models.CharField(max_length=100, blank=True, null=True)
    bcaa = models.CharField(max_length=100, blank=True, null=True)
    glutamin = models.CharField(max_length=100, blank=True, null=True)
    weight4 = models.CharField(max_length=100, blank=True, null=True)
    kreatin = models.CharField(max_length=100, blank=True, null=True)
    nutritional_supplement = models.CharField(max_length=100, null=True, blank=True)

    def get_trainer_nutrition_delete_url(self):
        return reverse('trainer-nutrition-delete', kwargs={'id': self.id})

    def get_corporate_nutrition_delete_url(self):
        return reverse('corporate-nutrition-delete', kwargs={'id': self.id})

    def get_personal_nutrition_delete_url(self):
        return reverse('personal-nutrition-delete', kwargs={'id': self.id})

    class Meta:
        verbose_name_plural = 'Beslenme ve Tüketim Formu'


# Eudaimonia Sağlıklı Yaşam Semptom Formu
class EudaimoniaInput(models.Model):
    trainer = models.ForeignKey(to=Trainer, verbose_name="Antrenör", on_delete=models.CASCADE, blank=True, null=True)
    personal = models.ForeignKey(to=Personal, verbose_name="Danışan", on_delete=models.CASCADE, blank=True, null=True)
    date = models.DateField(("Date"), default=datetime.now(), blank=True)
    consciousness = models.CharField(max_length=100, blank=True, null=True)
    memory = models.CharField(max_length=100, blank=True, null=True)
    decision = models.CharField(max_length=100, blank=True, null=True)
    talk = models.CharField(max_length=100, blank=True, null=True)
    learning = models.CharField(max_length=100, blank=True, null=True)
    koordinatif = models.CharField(max_length=100, blank=True, null=True)
    acne = models.CharField(max_length=100, blank=True, null=True)
    drySkin = models.CharField(max_length=100, blank=True, null=True)
    eczema = models.CharField(max_length=100, blank=True, null=True)
    akut = models.CharField(max_length=100, blank=True, null=True)
    excessiveSweating = models.CharField(max_length=100, blank=True, null=True)
    headache = models.CharField(max_length=100, blank=True, null=True)
    migraine = models.CharField(max_length=100, blank=True, null=True)
    fainting = models.CharField(max_length=100, blank=True, null=True)
    sleep = models.CharField(max_length=100, blank=True, null=True)
    eyelids = models.CharField(max_length=100, blank=True, null=True)
    blackEyes = models.CharField(max_length=100, blank=True, null=True)
    swollenEyes = models.CharField(max_length=100, blank=True, null=True)
    visionProblems = models.CharField(max_length=100, blank=True, null=True)
    wateryEyes = models.CharField(max_length=100, blank=True, null=True)
    nasalCongestion = models.CharField(max_length=100, blank=True, null=True)
    sinus = models.CharField(max_length=100, blank=True, null=True)
    mukus = models.CharField(max_length=100, blank=True, null=True)
    Sneeze = models.CharField(max_length=100, blank=True, null=True)
    earItching = models.CharField(max_length=100, blank=True, null=True)
    earInfection = models.CharField(max_length=100, blank=True, null=True)
    earDischarge = models.CharField(max_length=100, blank=True, null=True)
    tinnitus = models.CharField(max_length=100, blank=True, null=True)
    chronic = models.CharField(max_length=100, blank=True, null=True)
    throat = models.CharField(max_length=100, blank=True, null=True)
    lip = models.CharField(max_length=100, blank=True, null=True)
    mouthAft = models.CharField(max_length=100, blank=True, null=True)
    chest = models.CharField(max_length=100, blank=True, null=True)
    asthma = models.CharField(max_length=100, blank=True, null=True)
    shortnessBreath = models.CharField(max_length=100, blank=True, null=True)
    breath = models.CharField(max_length=100, blank=True, null=True)
    heartRhythm = models.CharField(max_length=100, blank=True, null=True)
    heartPalpitations = models.CharField(max_length=100, blank=True, null=True)
    chestPain = models.CharField(max_length=100, blank=True, null=True)
    nausea = models.CharField(max_length=100, blank=True, null=True)
    vomiting = models.CharField(max_length=100, blank=True, null=True)
    diarrhea = models.CharField(max_length=100, blank=True, null=True)
    constipation = models.CharField(max_length=100, blank=True, null=True)
    swelling = models.CharField(max_length=100, blank=True, null=True)
    burping = models.CharField(max_length=100, blank=True, null=True)
    stomach = models.CharField(max_length=100, blank=True, null=True)
    abdominalIntestine = models.CharField(max_length=100, blank=True, null=True)
    jointPain = models.CharField(max_length=100, blank=True, null=True)
    musclePain = models.CharField(max_length=100, blank=True, null=True)
    artrit = models.CharField(max_length=100, blank=True, null=True)
    muscleStiffness = models.CharField(max_length=100, blank=True, null=True)
    muscleJoint = models.CharField(max_length=100, blank=True, null=True)
    weight = models.CharField(max_length=100, blank=True, null=True)
    constantlyEating = models.CharField(max_length=100, blank=True, null=True)
    weakness = models.CharField(max_length=100, blank=True, null=True)
    kompulsif = models.CharField(max_length=100, blank=True, null=True)
    edema = models.CharField(max_length=100, blank=True, null=True)
    tiredness = models.CharField(max_length=100, blank=True, null=True)
    numbness = models.CharField(max_length=100, blank=True, null=True)
    hyperactivity = models.CharField(max_length=100, blank=True, null=True)
    anksiyete = models.CharField(max_length=100, blank=True, null=True)
    depression = models.CharField(max_length=100, blank=True, null=True)
    emotion = models.CharField(max_length=100, blank=True, null=True)
    irritability = models.CharField(max_length=100, blank=True, null=True)
    susceptibility = models.CharField(max_length=100, blank=True, null=True)
    steroid = models.CharField(max_length=100, blank=True, null=True)
    nonSteroid = models.CharField(max_length=100, blank=True, null=True)
    antiRomatizmal = models.CharField(max_length=100, blank=True, null=True)
    antiBiyotik = models.CharField(max_length=100, blank=True, null=True)
    otoImmun = models.CharField(max_length=100, blank=True, null=True)
    otoImmun1 = models.CharField(max_length=100, blank=True, null=True)
    cesareanSection = models.CharField(max_length=100, blank=True, null=True)
    breastMilk = models.CharField(max_length=100, blank=True, null=True)
    dairyProducts = models.CharField(max_length=100, blank=True, null=True)
    earInflammation1 = models.CharField(max_length=100, blank=True, null=True)
    birthControl = models.CharField(max_length=100, blank=True, null=True)
    illness = models.CharField(max_length=100, blank=True, null=True)
    openInfection = models.CharField(max_length=100, blank=True, null=True)
    emergencyUrine = models.CharField(max_length=100, blank=True, null=True)
    genital = models.CharField(max_length=100, blank=True, null=True)
    hemoroit = models.CharField(max_length=100, blank=True, null=True)
    urineColor = models.CharField(max_length=100, blank=True, null=True)
    smellUrine = models.CharField(max_length=100, blank=True, null=True)
    smellFeces = models.CharField(max_length=100, blank=True, null=True)
    form = models.CharField(max_length=100, blank=True, null=True)
    often = models.CharField(max_length=100, blank=True, null=True)

    def get_trainer_eudaimonia_delete_url(self):
        return reverse('trainer-eudaimonia-delete', kwargs={'id': self.id})

    def get_corporate_eudaimonia_delete_url(self):
        return reverse('corporate-eudaimonia-delete', kwargs={'id': self.id})

    def get_personal_eudaimonia_delete_url(self):
        return reverse('personal-eudaimonia-delete', kwargs={'id': self.id})

    class Meta:
        verbose_name_plural = 'Eudaimonia Formu'


class CurriculumMorning(models.Model):
    meal_pleace1 = models.CharField(max_length=50, blank=True, null=True)  # Sabah öğünü için
    muz = models.CharField(max_length=50, blank=True, null=True)
    elma = models.CharField(max_length=50, blank=True, null=True)
    incir = models.CharField(max_length=50, blank=True, null=True)
    portakal = models.CharField(max_length=50, blank=True, null=True)
    mandalin = models.CharField(max_length=50, blank=True, null=True)
    karpuz = models.CharField(max_length=50, blank=True, null=True)
    kavun = models.CharField(max_length=50, blank=True, null=True)
    uzum = models.CharField(max_length=50, blank=True, null=True)
    bogurtlen = models.CharField(max_length=50, blank=True, null=True)
    cilek = models.CharField(max_length=50, blank=True, null=True)
    kivi = models.CharField(max_length=50, blank=True, null=True)
    seftali = models.CharField(max_length=50, blank=True, null=True)
    ayva = models.CharField(max_length=50, blank=True, null=True)
    armut = models.CharField(max_length=50, blank=True, null=True)
    ananas = models.CharField(max_length=50, blank=True, null=True)
    kiraz = models.CharField(max_length=50, blank=True, null=True)
    visne = models.CharField(max_length=50, blank=True, null=True)
    avakado = models.CharField(max_length=50, blank=True, null=True)
    fruit_porsion = models.CharField(max_length=50, null=True, blank=True)
    salata = models.CharField(max_length=50, blank=True, null=True)
    yesil = models.CharField(max_length=50, blank=True, null=True)
    ispanak = models.CharField(max_length=50, blank=True, null=True)
    lahana = models.CharField(max_length=50, blank=True, null=True)
    mor = models.CharField(max_length=50, blank=True, null=True)
    bruksel = models.CharField(max_length=50, blank=True, null=True)
    patlican = models.CharField(max_length=50, blank=True, null=True)
    kabak = models.CharField(max_length=50, blank=True, null=True)
    havuc = models.CharField(max_length=50, blank=True, null=True)
    marul = models.CharField(max_length=50, blank=True, null=True)
    brokoli = models.CharField(max_length=50, blank=True, null=True)
    karnabahar = models.CharField(max_length=50, blank=True, null=True)
    domates = models.CharField(max_length=50, blank=True, null=True)
    salatalik = models.CharField(max_length=50, blank=True, null=True)
    pirasa = models.CharField(max_length=50, blank=True, null=True)
    yesilFasulye = models.CharField(max_length=50, blank=True, null=True)
    kuruSogan = models.CharField(max_length=50, blank=True, null=True)
    sarimsak = models.CharField(max_length=50, blank=True, null=True)
    turp = models.CharField(max_length=50, blank=True, null=True)
    biber = models.CharField(max_length=50, blank=True, null=True)
    mantar = models.CharField(max_length=50, blank=True, null=True)
    limon = models.CharField(max_length=50, blank=True, null=True)
    patates = models.CharField(max_length=50, blank=True, null=True)
    bamya = models.CharField(max_length=50, blank=True, null=True)
    kereviz = models.CharField(max_length=50, blank=True, null=True)
    enginar = models.CharField(max_length=50, blank=True, null=True)
    vegetables_porsion = models.CharField(max_length=50, blank=True, null=True)
    vegetables_stamp = models.CharField(max_length=50, blank=True, null=True)
    cheese = models.CharField(max_length=50, blank=True, null=True)
    egg = models.CharField(max_length=50, blank=True, null=True)
    egg_porsion = models.CharField(max_length=50, blank=True, null=True)
    bread = models.CharField(max_length=50, blank=True, null=True)
    bugday = models.CharField(max_length=50, blank=True, null=True)
    arpa = models.CharField(max_length=50, blank=True, null=True)
    pirinc = models.CharField(max_length=50, blank=True, null=True)
    kinoa = models.CharField(max_length=50, blank=True, null=True)
    yulaf = models.CharField(max_length=50, blank=True, null=True)
    cavdar = models.CharField(max_length=50, blank=True, null=True)
    misir = models.CharField(max_length=50, blank=True, null=True)
    tritikale = models.CharField(max_length=50, blank=True, null=True)
    grain_other = models.CharField(max_length=50, blank=True, null=True)
    grain_porsion = models.CharField(max_length=50, blank=True, null=True)
    kuruFasulye = models.CharField(max_length=50, blank=True, null=True)
    bezelye = models.CharField(max_length=50, blank=True, null=True)
    nohut = models.CharField(max_length=50, blank=True, null=True)
    kirmiziMercimek = models.CharField(max_length=50, blank=True, null=True)
    borulce = models.CharField(max_length=50, blank=True, null=True)
    barbunya = models.CharField(max_length=50, blank=True, null=True)
    soyaFasulyesi = models.CharField(max_length=50, blank=True, null=True)
    bakla = models.CharField(max_length=50, blank=True, null=True)
    broadbean_other = models.CharField(max_length=50, blank=True, null=True)
    broadbean_porsion = models.CharField(max_length=50, blank=True, null=True)
    zeytinAvakado = models.CharField(max_length=50, blank=True, null=True)
    aycicekDiger = models.CharField(max_length=50, blank=True, null=True)
    hindistan = models.CharField(max_length=50, blank=True, null=True)
    tereyagi = models.CharField(max_length=50, blank=True, null=True)
    margarin = models.CharField(max_length=50, blank=True, null=True)
    oil_other = models.CharField(max_length=50, blank=True, null=True)
    oil_porsion = models.CharField(max_length=50, blank=True, null=True)
    tozBiber = models.CharField(max_length=50, blank=True, null=True)
    pulBiber = models.CharField(max_length=50, blank=True, null=True)
    kimyon = models.CharField(max_length=50, blank=True, null=True)
    yediTurlu = models.CharField(max_length=50, blank=True, null=True)
    karabiber = models.CharField(max_length=50, blank=True, null=True)
    zencefil = models.CharField(max_length=50, blank=True, null=True)
    zerdecal = models.CharField(max_length=50, blank=True, null=True)
    biberiye = models.CharField(max_length=50, blank=True, null=True)
    sumak = models.CharField(max_length=50, blank=True, null=True)
    kisnis = models.CharField(max_length=50, blank=True, null=True)
    corekotu = models.CharField(max_length=50, blank=True, null=True)
    kekik = models.CharField(max_length=50, blank=True, null=True)
    ketenTohumu = models.CharField(max_length=50, blank=True, null=True)
    kori = models.CharField(max_length=50, blank=True, null=True)
    hashas = models.CharField(max_length=50, blank=True, null=True)
    nane = models.CharField(max_length=50, blank=True, null=True)
    tarcin = models.CharField(max_length=50, blank=True, null=True)
    yenibahar = models.CharField(max_length=50, blank=True, null=True)
    defneYapragi = models.CharField(max_length=50, blank=True, null=True)
    spice_other = models.CharField(max_length=50, blank=True, null=True)
    spice_porsion = models.CharField(max_length=50, blank=True, null=True)
    ceviz = models.CharField(max_length=50, blank=True, null=True)
    badem = models.CharField(max_length=50, blank=True, null=True)
    findik = models.CharField(max_length=50, blank=True, null=True)
    kaju = models.CharField(max_length=50, blank=True, null=True)
    antepFistigi = models.CharField(max_length=50, blank=True, null=True)
    yerFistigi = models.CharField(max_length=50, blank=True, null=True)
    leblebi = models.CharField(max_length=50, blank=True, null=True)
    kabakCekirdegi = models.CharField(max_length=50, blank=True, null=True)
    ayCekirdek = models.CharField(max_length=50, blank=True, null=True)
    nuts_other = models.CharField(max_length=50, blank=True, null=True)
    nuts_process = models.CharField(max_length=50, blank=True, null=True)
    nuts_porsion = models.CharField(max_length=50, blank=True, null=True)
    kayisi_surved = models.CharField(max_length=50, blank=True, null=True)
    kudus_surved = models.CharField(max_length=50, blank=True, null=True)
    trabzon_surved = models.CharField(max_length=50, blank=True, null=True)
    incir_surved = models.CharField(max_length=50, blank=True, null=True)
    cilek_surved = models.CharField(max_length=50, blank=True, null=True)
    erik_surved = models.CharField(max_length=50, blank=True, null=True)
    keci_surved = models.CharField(max_length=50, blank=True, null=True)
    armut_surved = models.CharField(max_length=50, blank=True, null=True)
    elma_surved = models.CharField(max_length=50, blank=True, null=True)
    uzum_surved = models.CharField(max_length=50, blank=True, null=True)
    surved_other = models.CharField(max_length=50, blank=True, null=True)
    surved_porsion = models.CharField(max_length=50, blank=True, null=True)
    patty = models.CharField(max_length=50, blank=True, null=True)
    chocolate = models.CharField(max_length=50, blank=True, null=True)
    dessert = models.CharField(max_length=50, blank=True, null=True)
    salt_choice = models.CharField(max_length=50, blank=True, null=True)
    salt_porsion = models.CharField(max_length=50, blank=True, null=True)
    water = models.CharField(max_length=50, blank=True, null=True)
    coffee_consumption = models.CharField(max_length=50, blank=True, null=True)
    tea_consumption = models.CharField(max_length=50, blank=True, null=True)
    milk = models.CharField(max_length=50, blank=True, null=True)
    yoghurt = models.CharField(max_length=50, blank=True, null=True)
    soot_drinks = models.CharField(max_length=50, blank=True, null=True)
    juice_consumption = models.CharField(max_length=50, blank=True, null=True)
    alcohol = models.CharField(max_length=50, blank=True, null=True)
    cigaret = models.CharField(max_length=50, blank=True, null=True)
    d = models.CharField(max_length=50, blank=True, null=True)
    c = models.CharField(max_length=50, blank=True, null=True)
    b = models.CharField(max_length=50, blank=True, null=True)
    multi = models.CharField(max_length=50, blank=True, null=True)
    bagisiklik = models.CharField(max_length=50, blank=True, null=True)
    demir = models.CharField(max_length=50, blank=True, null=True)
    cinko = models.CharField(max_length=50, blank=True, null=True)
    kalsiyum = models.CharField(max_length=50, blank=True, null=True)
    kollajen = models.CharField(max_length=50, blank=True, null=True)
    glucosamin = models.CharField(max_length=50, blank=True, null=True)
    aminoasit = models.CharField(max_length=50, blank=True, null=True)
    l = models.CharField(max_length=50, blank=True, null=True)
    cla = models.CharField(max_length=50, blank=True, null=True)
    chromium = models.CharField(max_length=50, blank=True, null=True)
    omega = models.CharField(max_length=50, blank=True, null=True)
    q = models.CharField(max_length=50, blank=True, null=True)
    protein = models.CharField(max_length=50, blank=True, null=True)
    bcaa = models.CharField(max_length=50, blank=True, null=True)
    glutamin = models.CharField(max_length=50, blank=True, null=True)
    kilo = models.CharField(max_length=50, blank=True, null=True)
    kilo1 = models.CharField(max_length=50, blank=True, null=True)
    food_other = models.CharField(max_length=50, blank=True, null=True)

    class Meta:
        verbose_name_plural = 'Sabah Öğünü Formu'


class CurriculumNoon(models.Model):
    meal_pleace_noon = models.CharField(max_length=50, blank=True, null=True)  # Öğle öğünü için
    muz_noon = models.CharField(max_length=50, blank=True, null=True)
    elma_noon = models.CharField(max_length=50, blank=True, null=True)
    incir_noon = models.CharField(max_length=50, blank=True, null=True)
    portakal_noon = models.CharField(max_length=50, blank=True, null=True)
    mandalin_noon = models.CharField(max_length=50, blank=True, null=True)
    karpuz_noon = models.CharField(max_length=50, blank=True, null=True)
    kavun_noon = models.CharField(max_length=50, blank=True, null=True)
    uzum_noon = models.CharField(max_length=50, blank=True, null=True)
    bogurtlen_noon = models.CharField(max_length=50, blank=True, null=True)
    cilek_noon = models.CharField(max_length=50, blank=True, null=True)
    kivi_noon = models.CharField(max_length=50, blank=True, null=True)
    seftali_noon = models.CharField(max_length=50, blank=True, null=True)
    ayva_noon = models.CharField(max_length=50, blank=True, null=True)
    armut_noon = models.CharField(max_length=50, blank=True, null=True)
    ananas_noon = models.CharField(max_length=50, blank=True, null=True)
    kiraz_noon = models.CharField(max_length=50, blank=True, null=True)
    visne_noon = models.CharField(max_length=50, blank=True, null=True)
    avakado_noon = models.CharField(max_length=50, blank=True, null=True)
    fruit_porsion_noon = models.CharField(max_length=50, null=True, blank=True)
    salata_noon = models.CharField(max_length=50, blank=True, null=True)
    yesil_noon = models.CharField(max_length=50, blank=True, null=True)
    ispanak_noon = models.CharField(max_length=50, blank=True, null=True)
    lahana_noon = models.CharField(max_length=50, blank=True, null=True)
    mor_noon = models.CharField(max_length=50, blank=True, null=True)
    bruksel_noon = models.CharField(max_length=50, blank=True, null=True)
    patlican_noon = models.CharField(max_length=50, blank=True, null=True)
    kabak_noon = models.CharField(max_length=50, blank=True, null=True)
    havuc_noon = models.CharField(max_length=50, blank=True, null=True)
    marul_noon = models.CharField(max_length=50, blank=True, null=True)
    brokoli_noon = models.CharField(max_length=50, blank=True, null=True)
    karnabahar_noon = models.CharField(max_length=50, blank=True, null=True)
    domates_noon = models.CharField(max_length=50, blank=True, null=True)
    salatalik_noon = models.CharField(max_length=50, blank=True, null=True)
    pirasa_noon = models.CharField(max_length=50, blank=True, null=True)
    yesilFasulye_noon = models.CharField(max_length=50, blank=True, null=True)
    kuruSogan_noon = models.CharField(max_length=50, blank=True, null=True)
    sarimsak_noon = models.CharField(max_length=50, blank=True, null=True)
    turp_noon = models.CharField(max_length=50, blank=True, null=True)
    biber_noon = models.CharField(max_length=50, blank=True, null=True)
    mantar_noon = models.CharField(max_length=50, blank=True, null=True)
    limon_noon = models.CharField(max_length=50, blank=True, null=True)
    patates_noon = models.CharField(max_length=50, blank=True, null=True)
    bamya_noon = models.CharField(max_length=50, blank=True, null=True)
    kereviz_noon = models.CharField(max_length=50, blank=True, null=True)
    enginar_noon = models.CharField(max_length=50, blank=True, null=True)
    vegetables_porsion_noon = models.CharField(max_length=50, null=True, blank=True)
    vegetables_stamp_noon = models.CharField(max_length=50, null=True, blank=True)
    cheese_noon = models.CharField(max_length=50, null=True, blank=True)
    egg_noon = models.CharField(max_length=50, null=True, blank=True)
    egg_porsion_noon = models.CharField(max_length=50, null=True, blank=True)
    bread_noon = models.CharField(max_length=50, null=True, blank=True)
    bugday_noon = models.CharField(max_length=50, blank=True, null=True)
    arpa_noon = models.CharField(max_length=50, blank=True, null=True)
    pirinc_noon = models.CharField(max_length=50, blank=True, null=True)
    kinoa_noon = models.CharField(max_length=50, blank=True, null=True)
    yulaf_noon = models.CharField(max_length=50, blank=True, null=True)
    cavdar_noon = models.CharField(max_length=50, blank=True, null=True)
    misir_noon = models.CharField(max_length=50, blank=True, null=True)
    tritikale_noon = models.CharField(max_length=50, blank=True, null=True)
    grain_other_noon = models.CharField(max_length=50, blank=True, null=True)
    grain_porsion_noon = models.CharField(max_length=50, null=True, blank=True)
    kuruFasulye_noon = models.CharField(max_length=50, blank=True, null=True)
    bezelye_noon = models.CharField(max_length=50, blank=True, null=True)
    nohut_noon = models.CharField(max_length=50, blank=True, null=True)
    kirmiziMercimek_noon = models.CharField(max_length=50, blank=True, null=True)
    borulce_noon = models.CharField(max_length=50, blank=True, null=True)
    barbunya_noon = models.CharField(max_length=50, blank=True, null=True)
    soyaFasulyesi_noon = models.CharField(max_length=50, blank=True, null=True)
    bakla_noon = models.CharField(max_length=50, blank=True, null=True)
    broadbean_other_noon = models.CharField(max_length=50, blank=True, null=True)
    broadbean_porsion_noon = models.CharField(max_length=50, blank=True, null=True)
    zeytinAvakado_noon = models.CharField(max_length=50, blank=True, null=True)
    aycicekDiger_noon = models.CharField(max_length=50, blank=True, null=True)
    hindistan_noon = models.CharField(max_length=50, blank=True, null=True)
    tereyagi_noon = models.CharField(max_length=50, blank=True, null=True)
    margarin_noon = models.CharField(max_length=50, blank=True, null=True)
    oil_other_noon = models.CharField(max_length=50, blank=True, null=True)
    oil_porsion_noon = models.CharField(max_length=50, blank=True, null=True)
    tozBiber_noon = models.CharField(max_length=50, blank=True, null=True)
    pulBiber_noon = models.CharField(max_length=50, blank=True, null=True)
    kimyon_noon = models.CharField(max_length=50, blank=True, null=True)
    yediTurlu_noon = models.CharField(max_length=50, blank=True, null=True)
    karabiber_noon = models.CharField(max_length=50, blank=True, null=True)
    zencefil_noon = models.CharField(max_length=50, blank=True, null=True)
    zerdecal_noon = models.CharField(max_length=50, blank=True, null=True)
    biberiye_noon = models.CharField(max_length=50, blank=True, null=True)
    sumak_noon = models.CharField(max_length=50, blank=True, null=True)
    kisnis_noon = models.CharField(max_length=50, blank=True, null=True)
    corekotu_noon = models.CharField(max_length=50, blank=True, null=True)
    kekik_noon = models.CharField(max_length=50, blank=True, null=True)
    ketenTohumu_noon = models.CharField(max_length=50, blank=True, null=True)
    kori_noon = models.CharField(max_length=50, blank=True, null=True)
    hashas_noon = models.CharField(max_length=50, blank=True, null=True)
    nane_noon = models.CharField(max_length=50, blank=True, null=True)
    tarcin_noon = models.CharField(max_length=50, blank=True, null=True)
    yenibahar_noon = models.CharField(max_length=50, blank=True, null=True)
    defneYapragi_noon = models.CharField(max_length=50, blank=True, null=True)
    spice_other_noon = models.CharField(max_length=50, blank=True, null=True)
    spice_porsion_noon = models.CharField(max_length=50, blank=True, null=True)
    ceviz_noon = models.CharField(max_length=50, blank=True, null=True)
    badem_noon = models.CharField(max_length=50, blank=True, null=True)
    findik_noon = models.CharField(max_length=50, blank=True, null=True)
    kaju_noon = models.CharField(max_length=50, blank=True, null=True)
    antepFistigi_noon = models.CharField(max_length=50, blank=True, null=True)
    yerFistigi_noon = models.CharField(max_length=50, blank=True, null=True)
    leblebi_noon = models.CharField(max_length=50, blank=True, null=True)
    kabakCekirdegi_noon = models.CharField(max_length=50, blank=True, null=True)
    ayCekirdek_noon = models.CharField(max_length=50, blank=True, null=True)
    nuts_other_noon = models.CharField(max_length=50, blank=True, null=True)
    nuts_process_noon = models.CharField(max_length=50, blank=True, null=True)
    nuts_porsion_noon = models.CharField(max_length=50, blank=True, null=True)
    kayisi_surved_noon = models.CharField(max_length=50, blank=True, null=True)
    kudus_surved_noon = models.CharField(max_length=50, blank=True, null=True)
    trabzon_surved_noon = models.CharField(max_length=50, blank=True, null=True)
    incir_surved_noon = models.CharField(max_length=50, blank=True, null=True)
    cilek_surved_noon = models.CharField(max_length=50, blank=True, null=True)
    erik_surved_noon = models.CharField(max_length=50, blank=True, null=True)
    keci_surved_noon = models.CharField(max_length=50, blank=True, null=True)
    armut_surved_noon = models.CharField(max_length=50, blank=True, null=True)
    elma_surved_noon = models.CharField(max_length=50, blank=True, null=True)
    uzum_surved_noon = models.CharField(max_length=50, blank=True, null=True)
    surved_other_noon = models.CharField(max_length=50, blank=True, null=True)
    surved_porsion_noon = models.CharField(max_length=50, blank=True, null=True)
    patty_noon = models.CharField(max_length=50, blank=True, null=True)
    chocolate_noon = models.CharField(max_length=50, blank=True, null=True)
    dessert_noon = models.CharField(max_length=50, blank=True, null=True)
    salt_choice_noon = models.CharField(max_length=50, blank=True, null=True)
    salt_porsion_noon = models.CharField(max_length=50, blank=True, null=True)
    water_noon = models.CharField(max_length=50, blank=True, null=True)
    coffee_consumption_noon = models.CharField(max_length=50, blank=True, null=True)
    tea_consumption_noon = models.CharField(max_length=50, blank=True, null=True)
    milk_noon = models.CharField(max_length=50, blank=True, null=True)
    yoghurt_noon = models.CharField(max_length=50, blank=True, null=True)
    soot_drinks_noon = models.CharField(max_length=50, blank=True, null=True)
    juice_consumption_noon = models.CharField(max_length=50, blank=True, null=True)
    alcohol_noon = models.CharField(max_length=50, blank=True, null=True)
    cigaret_noon = models.CharField(max_length=50, blank=True, null=True)
    d_noon = models.CharField(max_length=50, blank=True, null=True)
    c_noon = models.CharField(max_length=50, blank=True, null=True)
    b_noon = models.CharField(max_length=50, blank=True, null=True)
    multi_noon = models.CharField(max_length=50, blank=True, null=True)
    bagisiklik_noon = models.CharField(max_length=50, blank=True, null=True)
    demir_noon = models.CharField(max_length=50, blank=True, null=True)
    cinko_noon = models.CharField(max_length=50, blank=True, null=True)
    kalsiyum_noon = models.CharField(max_length=50, blank=True, null=True)
    kollajen_noon = models.CharField(max_length=50, blank=True, null=True)
    glucosamin_noon = models.CharField(max_length=50, blank=True, null=True)
    aminoasit_noon = models.CharField(max_length=50, blank=True, null=True)
    l_noon = models.CharField(max_length=50, blank=True, null=True)
    cla_noon = models.CharField(max_length=50, blank=True, null=True)
    chromium_noon = models.CharField(max_length=50, blank=True, null=True)
    omega_noon = models.CharField(max_length=50, blank=True, null=True)
    q_noon = models.CharField(max_length=50, blank=True, null=True)
    protein_noon = models.CharField(max_length=50, blank=True, null=True)
    bcaa_noon = models.CharField(max_length=50, blank=True, null=True)
    glutamin_noon = models.CharField(max_length=50, blank=True, null=True)
    kilo_noon = models.CharField(max_length=50, blank=True, null=True)
    kilo1_noon = models.CharField(max_length=50, blank=True, null=True)
    food_other_noon = models.CharField(max_length=50, blank=True, null=True)

    class Meta:
        verbose_name_plural = 'Öğle Öğünü Formu'


class CurriculumEvening(models.Model):
    meal_pleace_evening = models.CharField(max_length=50, blank=True, null=True)  # Akşam öğünü için
    muz_evening = models.CharField(max_length=50, blank=True, null=True)
    elma_evening = models.CharField(max_length=50, blank=True, null=True)
    incir_evening = models.CharField(max_length=50, blank=True, null=True)
    portakal_evening = models.CharField(max_length=50, blank=True, null=True)
    mandalin_evening = models.CharField(max_length=50, blank=True, null=True)
    karpuz_evening = models.CharField(max_length=50, blank=True, null=True)
    kavun_evening = models.CharField(max_length=50, blank=True, null=True)
    uzum_evening = models.CharField(max_length=50, blank=True, null=True)
    bogurtlen_evening = models.CharField(max_length=50, blank=True, null=True)
    cilek_evening = models.CharField(max_length=50, blank=True, null=True)
    kivi_evening = models.CharField(max_length=50, blank=True, null=True)
    seftali_evening = models.CharField(max_length=50, blank=True, null=True)
    ayva_evening = models.CharField(max_length=50, blank=True, null=True)
    armut_evening = models.CharField(max_length=50, blank=True, null=True)
    ananas_evening = models.CharField(max_length=50, blank=True, null=True)
    kiraz_evening = models.CharField(max_length=50, blank=True, null=True)
    visne_evening = models.CharField(max_length=50, blank=True, null=True)
    avakado_evening = models.CharField(max_length=50, blank=True, null=True)
    fruit_porsion_evening = models.CharField(max_length=50, null=True, blank=True)
    salata_evening = models.CharField(max_length=50, blank=True, null=True)
    yesil_evening = models.CharField(max_length=50, blank=True, null=True)
    ispanak_evening = models.CharField(max_length=50, blank=True, null=True)
    lahana_evening = models.CharField(max_length=50, blank=True, null=True)
    mor_evening = models.CharField(max_length=50, blank=True, null=True)
    bruksel_evening = models.CharField(max_length=50, blank=True, null=True)
    patlican_evening = models.CharField(max_length=50, blank=True, null=True)
    kabak_evening = models.CharField(max_length=50, blank=True, null=True)
    havuc_evening = models.CharField(max_length=50, blank=True, null=True)
    marul_evening = models.CharField(max_length=50, blank=True, null=True)
    brokoli_evening = models.CharField(max_length=50, blank=True, null=True)
    karnabahar_evening = models.CharField(max_length=50, blank=True, null=True)
    domates_evening = models.CharField(max_length=50, blank=True, null=True)
    salatalik_evening = models.CharField(max_length=50, blank=True, null=True)
    pirasa_evening = models.CharField(max_length=50, blank=True, null=True)
    yesilFasulye_evening = models.CharField(max_length=50, blank=True, null=True)
    kuruSogan_evening = models.CharField(max_length=50, blank=True, null=True)
    sarimsak_evening = models.CharField(max_length=50, blank=True, null=True)
    turp_evening = models.CharField(max_length=50, blank=True, null=True)
    biber_evening = models.CharField(max_length=50, blank=True, null=True)
    mantar_evening = models.CharField(max_length=50, blank=True, null=True)
    limon_evening = models.CharField(max_length=50, blank=True, null=True)
    patates_evening = models.CharField(max_length=50, blank=True, null=True)
    bamya_evening = models.CharField(max_length=50, blank=True, null=True)
    kereviz_evening = models.CharField(max_length=50, blank=True, null=True)
    enginar_evening = models.CharField(max_length=50, blank=True, null=True)
    vegetables_porsion_evening = models.CharField(max_length=50, null=True, blank=True)
    vegetables_stamp_evening = models.CharField(max_length=50, null=True, blank=True)
    cheese_evening = models.CharField(max_length=50, null=True, blank=True)
    egg_evening = models.CharField(max_length=50, null=True, blank=True)
    egg_porsion_evening = models.CharField(max_length=50, null=True, blank=True)
    bread_evening = models.CharField(max_length=50, null=True, blank=True)
    bugday_evening = models.CharField(max_length=50, blank=True, null=True)
    arpa_evening = models.CharField(max_length=50, blank=True, null=True)
    pirinc_evening = models.CharField(max_length=50, blank=True, null=True)
    kinoa_evening = models.CharField(max_length=50, blank=True, null=True)
    yulaf_evening = models.CharField(max_length=50, blank=True, null=True)
    cavdar_evening = models.CharField(max_length=50, blank=True, null=True)
    misir_evening = models.CharField(max_length=50, blank=True, null=True)
    tritikale_evening = models.CharField(max_length=50, blank=True, null=True)
    grain_other_evening = models.CharField(max_length=50, blank=True, null=True)
    grain_porsion_evening = models.CharField(max_length=50, null=True, blank=True)
    kuruFasulye_evening = models.CharField(max_length=50, blank=True, null=True)
    bezelye_evening = models.CharField(max_length=50, blank=True, null=True)
    nohut_evening = models.CharField(max_length=50, blank=True, null=True)
    kirmiziMercimek_evening = models.CharField(max_length=50, blank=True, null=True)
    borulce_evening = models.CharField(max_length=50, blank=True, null=True)
    barbunya_evening = models.CharField(max_length=50, blank=True, null=True)
    soyaFasulyesi_evening = models.CharField(max_length=50, blank=True, null=True)
    bakla_evening = models.CharField(max_length=50, blank=True, null=True)
    broadbean_other_evening = models.CharField(max_length=50, blank=True, null=True)
    broadbean_porsion_evening = models.CharField(max_length=50, blank=True, null=True)
    zeytinAvakado_evening = models.CharField(max_length=50, blank=True, null=True)
    aycicekDiger_evening = models.CharField(max_length=50, blank=True, null=True)
    hindistan_evening = models.CharField(max_length=50, blank=True, null=True)
    tereyagi_evening = models.CharField(max_length=50, blank=True, null=True)
    margarin_evening = models.CharField(max_length=50, blank=True, null=True)
    oil_other_evening = models.CharField(max_length=50, blank=True, null=True)
    oil_porsion_evening = models.CharField(max_length=50, blank=True, null=True)
    tozBiber_evening = models.CharField(max_length=50, blank=True, null=True)
    pulBiber_evening = models.CharField(max_length=50, blank=True, null=True)
    kimyon_evening = models.CharField(max_length=50, blank=True, null=True)
    yediTurlu_evening = models.CharField(max_length=50, blank=True, null=True)
    karabiber_evening = models.CharField(max_length=50, blank=True, null=True)
    zencefil_evening = models.CharField(max_length=50, blank=True, null=True)
    zerdecal_evening = models.CharField(max_length=50, blank=True, null=True)
    biberiye_evening = models.CharField(max_length=50, blank=True, null=True)
    sumak_evening = models.CharField(max_length=50, blank=True, null=True)
    kisnis_evening = models.CharField(max_length=50, blank=True, null=True)
    corekotu_evening = models.CharField(max_length=50, blank=True, null=True)
    kekik_evening = models.CharField(max_length=50, blank=True, null=True)
    ketenTohumu_evening = models.CharField(max_length=50, blank=True, null=True)
    kori_evening = models.CharField(max_length=50, blank=True, null=True)
    hashas_evening = models.CharField(max_length=50, blank=True, null=True)
    nane_evening = models.CharField(max_length=50, blank=True, null=True)
    tarcin_evening = models.CharField(max_length=50, blank=True, null=True)
    yenibahar_evening = models.CharField(max_length=50, blank=True, null=True)
    defneYapragi_evening = models.CharField(max_length=50, blank=True, null=True)
    spice_other_evening = models.CharField(max_length=50, blank=True, null=True)
    spice_porsion_evening = models.CharField(max_length=50, blank=True, null=True)
    ceviz_evening = models.CharField(max_length=50, blank=True, null=True)
    badem_evening = models.CharField(max_length=50, blank=True, null=True)
    findik_evening = models.CharField(max_length=50, blank=True, null=True)
    kaju_evening = models.CharField(max_length=50, blank=True, null=True)
    antepFistigi_evening = models.CharField(max_length=50, blank=True, null=True)
    yerFistigi_evening = models.CharField(max_length=50, blank=True, null=True)
    leblebi_evening = models.CharField(max_length=50, blank=True, null=True)
    kabakCekirdegi_evening = models.CharField(max_length=50, blank=True, null=True)
    ayCekirdek_evening = models.CharField(max_length=50, blank=True, null=True)
    nuts_other_evening = models.CharField(max_length=50, blank=True, null=True)
    nuts_process_evening = models.CharField(max_length=50, blank=True, null=True)
    nuts_porsion_evening = models.CharField(max_length=50, blank=True, null=True)
    kayisi_surved_evening = models.CharField(max_length=50, blank=True, null=True)
    kudus_surved_evening = models.CharField(max_length=50, blank=True, null=True)
    trabzon_surved_evening = models.CharField(max_length=50, blank=True, null=True)
    incir_surved_evening = models.CharField(max_length=50, blank=True, null=True)
    cilek_surved_evening = models.CharField(max_length=50, blank=True, null=True)
    erik_surved_evening = models.CharField(max_length=50, blank=True, null=True)
    keci_surved_evening = models.CharField(max_length=50, blank=True, null=True)
    armut_surved_evening = models.CharField(max_length=50, blank=True, null=True)
    elma_surved_evening = models.CharField(max_length=50, blank=True, null=True)
    uzum_surved_evening = models.CharField(max_length=50, blank=True, null=True)
    surved_other_evening = models.CharField(max_length=50, blank=True, null=True)
    surved_porsion_evening = models.CharField(max_length=50, blank=True, null=True)
    patty_evening = models.CharField(max_length=50, blank=True, null=True)
    chocolate_evening = models.CharField(max_length=50, blank=True, null=True)
    dessert_evening = models.CharField(max_length=50, blank=True, null=True)
    salt_choice_evening = models.CharField(max_length=50, blank=True, null=True)
    salt_porsion_evening = models.CharField(max_length=50, blank=True, null=True)
    water_evening = models.CharField(max_length=50, blank=True, null=True)
    coffee_consumption_evening = models.CharField(max_length=50, blank=True, null=True)
    tea_consumption_evening = models.CharField(max_length=50, blank=True, null=True)
    milk_evening = models.CharField(max_length=50, blank=True, null=True)
    yoghurt_evening = models.CharField(max_length=50, blank=True, null=True)
    soot_drinks_evening = models.CharField(max_length=50, blank=True, null=True)
    juice_consumption_evening = models.CharField(max_length=50, blank=True, null=True)
    alcohol_evening = models.CharField(max_length=50, blank=True, null=True)
    cigaret_evening = models.CharField(max_length=50, blank=True, null=True)
    d_evening = models.CharField(max_length=50, blank=True, null=True)
    c_evening = models.CharField(max_length=50, blank=True, null=True)
    b_evening = models.CharField(max_length=50, blank=True, null=True)
    multi_evening = models.CharField(max_length=50, blank=True, null=True)
    bagisiklik_evening = models.CharField(max_length=50, blank=True, null=True)
    demir_evening = models.CharField(max_length=50, blank=True, null=True)
    cinko_evening = models.CharField(max_length=50, blank=True, null=True)
    kalsiyum_evening = models.CharField(max_length=50, blank=True, null=True)
    kollajen_evening = models.CharField(max_length=50, blank=True, null=True)
    glucosamin_evening = models.CharField(max_length=50, blank=True, null=True)
    aminoasit_evening = models.CharField(max_length=50, blank=True, null=True)
    l_evening = models.CharField(max_length=50, blank=True, null=True)
    cla_evening = models.CharField(max_length=50, blank=True, null=True)
    chromium_evening = models.CharField(max_length=50, blank=True, null=True)
    omega_evening = models.CharField(max_length=50, blank=True, null=True)
    q_evening = models.CharField(max_length=50, blank=True, null=True)
    protein_evening = models.CharField(max_length=50, blank=True, null=True)
    bcaa_evening = models.CharField(max_length=50, blank=True, null=True)
    glutamin_evening = models.CharField(max_length=50, blank=True, null=True)
    kilo_evening = models.CharField(max_length=50, blank=True, null=True)
    kilo1_evening = models.CharField(max_length=50, blank=True, null=True)
    food_other_evening = models.CharField(max_length=50, blank=True, null=True)

    class Meta:
        verbose_name_plural = 'Akşam Öğünü Formu'


class CurriculumSnack(models.Model):
    meal_pleace_snack = models.CharField(max_length=50, blank=True, null=True)  # Ara öğünü için
    muz_snack = models.CharField(max_length=50, blank=True, null=True)
    elma_snack = models.CharField(max_length=50, blank=True, null=True)
    incir_snack = models.CharField(max_length=50, blank=True, null=True)
    portakal_snack = models.CharField(max_length=50, blank=True, null=True)
    mandalin_snack = models.CharField(max_length=50, blank=True, null=True)
    karpuz_snack = models.CharField(max_length=50, blank=True, null=True)
    kavun_snack = models.CharField(max_length=50, blank=True, null=True)
    uzum_snack = models.CharField(max_length=50, blank=True, null=True)
    bogurtlen_snack = models.CharField(max_length=50, blank=True, null=True)
    cilek_snack = models.CharField(max_length=50, blank=True, null=True)
    kivi_snack = models.CharField(max_length=50, blank=True, null=True)
    seftali_snack = models.CharField(max_length=50, blank=True, null=True)
    ayva_snack = models.CharField(max_length=50, blank=True, null=True)
    armut_snack = models.CharField(max_length=50, blank=True, null=True)
    ananas_snack = models.CharField(max_length=50, blank=True, null=True)
    kiraz_snack = models.CharField(max_length=50, blank=True, null=True)
    visne_snack = models.CharField(max_length=50, blank=True, null=True)
    avakado_snack = models.CharField(max_length=50, blank=True, null=True)
    fruit_porsion_snack = models.CharField(max_length=50, null=True, blank=True)
    salata_snack = models.CharField(max_length=50, blank=True, null=True)
    yesil_snack = models.CharField(max_length=50, blank=True, null=True)
    ispanak_snack = models.CharField(max_length=50, blank=True, null=True)
    lahana_snack = models.CharField(max_length=50, blank=True, null=True)
    mor_snack = models.CharField(max_length=50, blank=True, null=True)
    bruksel_snack = models.CharField(max_length=50, blank=True, null=True)
    patlican_snack = models.CharField(max_length=50, blank=True, null=True)
    kabak_snack = models.CharField(max_length=50, blank=True, null=True)
    havuc_snack = models.CharField(max_length=50, blank=True, null=True)
    marul_snack = models.CharField(max_length=50, blank=True, null=True)
    brokoli_snack = models.CharField(max_length=50, blank=True, null=True)
    karnabahar_snack = models.CharField(max_length=50, blank=True, null=True)
    domates_snack = models.CharField(max_length=50, blank=True, null=True)
    salatalik_snack = models.CharField(max_length=50, blank=True, null=True)
    pirasa_snack = models.CharField(max_length=50, blank=True, null=True)
    yesilFasulye_snack = models.CharField(max_length=50, blank=True, null=True)
    kuruSogan_snack = models.CharField(max_length=50, blank=True, null=True)
    sarimsak_snack = models.CharField(max_length=50, blank=True, null=True)
    turp_snack = models.CharField(max_length=50, blank=True, null=True)
    biber_snack = models.CharField(max_length=50, blank=True, null=True)
    mantar_snack = models.CharField(max_length=50, blank=True, null=True)
    limon_snack = models.CharField(max_length=50, blank=True, null=True)
    patates_snack = models.CharField(max_length=50, blank=True, null=True)
    bamya_snack = models.CharField(max_length=50, blank=True, null=True)
    kereviz_snack = models.CharField(max_length=50, blank=True, null=True)
    enginar_snack = models.CharField(max_length=50, blank=True, null=True)
    vegetables_porsion_snack = models.CharField(max_length=50, null=True, blank=True)
    vegetables_stamp_snack = models.CharField(max_length=50, null=True, blank=True)
    cheese_snack = models.CharField(max_length=50, null=True, blank=True)
    egg_snack = models.CharField(max_length=50, null=True, blank=True)
    egg_porsion_snack = models.CharField(max_length=50, null=True, blank=True)
    bread_snack = models.CharField(max_length=50, null=True, blank=True)
    bugday_snack = models.CharField(max_length=50, blank=True, null=True)
    arpa_snack = models.CharField(max_length=50, blank=True, null=True)
    pirinc_snack = models.CharField(max_length=50, blank=True, null=True)
    kinoa_snack = models.CharField(max_length=50, blank=True, null=True)
    yulaf_snack = models.CharField(max_length=50, blank=True, null=True)
    cavdar_snack = models.CharField(max_length=50, blank=True, null=True)
    misir_snack = models.CharField(max_length=50, blank=True, null=True)
    tritikale_snack = models.CharField(max_length=50, blank=True, null=True)
    grain_other_snack = models.CharField(max_length=50, blank=True, null=True)
    grain_porsion_snack = models.CharField(max_length=50, null=True, blank=True)
    kuruFasulye_snack = models.CharField(max_length=50, blank=True, null=True)
    bezelye_snack = models.CharField(max_length=50, blank=True, null=True)
    nohut_snack = models.CharField(max_length=50, blank=True, null=True)
    kirmiziMercimek_snack = models.CharField(max_length=50, blank=True, null=True)
    borulce_snack = models.CharField(max_length=50, blank=True, null=True)
    barbunya_snack = models.CharField(max_length=50, blank=True, null=True)
    soyaFasulyesi_snack = models.CharField(max_length=50, blank=True, null=True)
    bakla_snack = models.CharField(max_length=50, blank=True, null=True)
    broadbean_other_snack = models.CharField(max_length=150, blank=True, null=True)
    broadbean_porsion_snack = models.CharField(max_length=50, blank=True, null=True)
    zeytinAvakado_snack = models.CharField(max_length=50, blank=True, null=True)
    aycicekDiger_snack = models.CharField(max_length=50, blank=True, null=True)
    hindistan_snack = models.CharField(max_length=50, blank=True, null=True)
    tereyagi_snack = models.CharField(max_length=50, blank=True, null=True)
    margarin_snack = models.CharField(max_length=50, blank=True, null=True)
    oil_other_snack = models.CharField(max_length=150, blank=True, null=True)
    oil_porsion_snack = models.CharField(max_length=50, blank=True, null=True)
    tozBiber_snack = models.CharField(max_length=50, blank=True, null=True)
    pulBiber_snack = models.CharField(max_length=50, blank=True, null=True)
    kimyon_snack = models.CharField(max_length=50, blank=True, null=True)
    yediTurlu_snack = models.CharField(max_length=50, blank=True, null=True)
    karabiber_snack = models.CharField(max_length=50, blank=True, null=True)
    zencefil_snack = models.CharField(max_length=50, blank=True, null=True)
    zerdecal_snack = models.CharField(max_length=50, blank=True, null=True)
    biberiye_snack = models.CharField(max_length=50, blank=True, null=True)
    sumak_snack = models.CharField(max_length=50, blank=True, null=True)
    kisnis_snack = models.CharField(max_length=50, blank=True, null=True)
    corekotu_snack = models.CharField(max_length=50, blank=True, null=True)
    kekik_snack = models.CharField(max_length=50, blank=True, null=True)
    ketenTohumu_snack = models.CharField(max_length=50, blank=True, null=True)
    kori_snack = models.CharField(max_length=50, blank=True, null=True)
    hashas_snack = models.CharField(max_length=50, blank=True, null=True)
    nane_snack = models.CharField(max_length=50, blank=True, null=True)
    tarcin_snack = models.CharField(max_length=50, blank=True, null=True)
    yenibahar_snack = models.CharField(max_length=50, blank=True, null=True)
    defneYapragi_snack = models.CharField(max_length=50, blank=True, null=True)
    spice_other_snack = models.CharField(max_length=150, blank=True, null=True)
    spice_porsion_snack = models.CharField(max_length=50, blank=True, null=True)
    ceviz_snack = models.CharField(max_length=50, blank=True, null=True)
    badem_snack = models.CharField(max_length=50, blank=True, null=True)
    findik_snack = models.CharField(max_length=50, blank=True, null=True)
    kaju_snack = models.CharField(max_length=50, blank=True, null=True)
    antepFistigi_snack = models.CharField(max_length=50, blank=True, null=True)
    yerFistigi_snack = models.CharField(max_length=50, blank=True, null=True)
    leblebi_snack = models.CharField(max_length=50, blank=True, null=True)
    kabakCekirdegi_snack = models.CharField(max_length=50, blank=True, null=True)
    ayCekirdek_snack = models.CharField(max_length=50, blank=True, null=True)
    nuts_other_snack = models.CharField(max_length=150, blank=True, null=True)
    nuts_process_snack = models.CharField(max_length=50, blank=True, null=True)
    nuts_porsion_snack = models.CharField(max_length=50, blank=True, null=True)
    kayisi_surved_snack = models.CharField(max_length=50, blank=True, null=True)
    kudus_surved_snack = models.CharField(max_length=50, blank=True, null=True)
    trabzon_surved_snack = models.CharField(max_length=50, blank=True, null=True)
    incir_surved_snack = models.CharField(max_length=50, blank=True, null=True)
    cilek_surved_snack = models.CharField(max_length=50, blank=True, null=True)
    erik_surved_snack = models.CharField(max_length=50, blank=True, null=True)
    keci_surved_snack = models.CharField(max_length=50, blank=True, null=True)
    armut_surved_snack = models.CharField(max_length=50, blank=True, null=True)
    elma_surved_snack = models.CharField(max_length=50, blank=True, null=True)
    uzum_surved_snack = models.CharField(max_length=50, blank=True, null=True)
    surved_other_snack = models.CharField(max_length=150, blank=True, null=True)
    surved_porsion_snack = models.CharField(max_length=50, blank=True, null=True)
    patty_snack = models.CharField(max_length=50, blank=True, null=True)
    chocolate_snack = models.CharField(max_length=50, blank=True, null=True)
    dessert_snack = models.CharField(max_length=50, blank=True, null=True)
    salt_choice_snack = models.CharField(max_length=50, blank=True, null=True)
    salt_porsion_snack = models.CharField(max_length=50, blank=True, null=True)
    water_snack = models.CharField(max_length=50, blank=True, null=True)
    coffee_consumption_snack = models.CharField(max_length=50, blank=True, null=True)
    tea_consumption_snack = models.CharField(max_length=50, blank=True, null=True)
    milk_snack = models.CharField(max_length=50, blank=True, null=True)
    yoghurt_snack = models.CharField(max_length=50, blank=True, null=True)
    soot_drinks_snack = models.CharField(max_length=50, blank=True, null=True)
    juice_consumption_snack = models.CharField(max_length=50, blank=True, null=True)
    alcohol_snack = models.CharField(max_length=50, blank=True, null=True)
    cigaret_snack = models.CharField(max_length=50, blank=True, null=True)
    d_snack = models.CharField(max_length=50, blank=True, null=True)
    c_snack = models.CharField(max_length=50, blank=True, null=True)
    b_snack = models.CharField(max_length=50, blank=True, null=True)
    multi_snack = models.CharField(max_length=50, blank=True, null=True)
    bagisiklik_snack = models.CharField(max_length=50, blank=True, null=True)
    demir_snack = models.CharField(max_length=50, blank=True, null=True)
    cinko_snack = models.CharField(max_length=50, blank=True, null=True)
    kalsiyum_snack = models.CharField(max_length=50, blank=True, null=True)
    kollajen_snack = models.CharField(max_length=50, blank=True, null=True)
    glucosamin_snack = models.CharField(max_length=50, blank=True, null=True)
    aminoasit_snack = models.CharField(max_length=50, blank=True, null=True)
    l_snack = models.CharField(max_length=50, blank=True, null=True)
    cla_snack = models.CharField(max_length=50, blank=True, null=True)
    chromium_snack = models.CharField(max_length=50, blank=True, null=True)
    omega_snack = models.CharField(max_length=50, blank=True, null=True)
    q_snack = models.CharField(max_length=50, blank=True, null=True)
    protein_snack = models.CharField(max_length=50, blank=True, null=True)
    bcaa_snack = models.CharField(max_length=50, blank=True, null=True)
    glutamin_snack = models.CharField(max_length=50, blank=True, null=True)
    kilo_snack = models.CharField(max_length=50, blank=True, null=True)
    kilo1_snack = models.CharField(max_length=50, blank=True, null=True)
    food_other_snack = models.CharField(max_length=150, blank=True, null=True)

    class Meta:
        verbose_name_plural = 'Ara Öğünü Formu'


class CurriculumWalking1(models.Model):
    trainer = models.ForeignKey(to=Trainer, verbose_name="Antrenör", on_delete=models.CASCADE, blank=True, null=True)
    personal = models.ForeignKey(to=Personal, verbose_name="Danışan", on_delete=models.CASCADE, blank=True, null=True)
    morning = models.ForeignKey(to=CurriculumMorning, verbose_name="Sabah Öğünü", on_delete=models.CASCADE, blank=True,
                                null=True)
    noon = models.ForeignKey(to=CurriculumNoon, verbose_name="Öğle Öğünü", on_delete=models.CASCADE, blank=True,
                             null=True)
    even = models.ForeignKey(to=CurriculumEvening, verbose_name="Akşam Öğünü", on_delete=models.CASCADE, blank=True,
                             null=True)
    snack = models.ForeignKey(to=CurriculumSnack, verbose_name="Ara Öğün", on_delete=models.CASCADE, blank=True,
                              null=True)
    date = models.DateField(("Date"), default=datetime.now(), blank=True)
    walk_date = models.DateField(max_length=50, null=True, blank=True)
    walk_time = models.TimeField(max_length=50, null=True, blank=True)
    walk_distance = models.CharField(max_length=50, null=True, blank=True)
    walk_before = models.CharField(max_length=50, null=True, blank=True)
    walk_after = models.CharField(max_length=50, null=True, blank=True)
    stairs_date = models.DateField(max_length=50, null=True, blank=True)
    stairs_climbing = models.CharField(max_length=50, null=True, blank=True)
    heart_date = models.DateField(max_length=50, blank=True, null=True)
    heart_time = models.TimeField(max_length=50, blank=True, null=True)
    heart_attack = models.CharField(max_length=50, blank=True, null=True)
    blood_date = models.DateField(max_length=50, blank=True, null=True)
    blood_time = models.TimeField(max_length=50, null=True, blank=True)
    sistolik = models.CharField(max_length=50, null=True, blank=True)
    diastolik = models.CharField(max_length=50, null=True, blank=True)
    sleep_date = models.DateField(max_length=50, blank=True, null=True)
    sleep_time = models.TimeField(max_length=50, blank=True, null=True)
    wakeup = models.TimeField(max_length=50, blank=True, null=True)

    def get_trainer_curriculum_delete_url(self):
        return reverse('trainer-curriculum-delete', kwargs={'id': self.id})

    def get_corporate_curriculum_delete_url(self):
        return reverse('corporate-curriculum-delete', kwargs={'id': self.id})

    def get_personal_curriculum_delete_url(self):
        return reverse('personal-curriculum-delete', kwargs={'id': self.id})

    class Meta:
        verbose_name_plural = 'Yüreme Mesafesi Formu'
